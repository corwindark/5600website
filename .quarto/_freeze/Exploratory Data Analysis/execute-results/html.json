{
  "hash": "bf635f967840891a35b911c9fbbd6ad7",
  "result": {
    "markdown": "---\ntitle: \"Exploratory Data Analysis\"\n\n---\n\n\n<h2>  Time Series Analysis   </h2>\n\n\nLet's start with reading in the intraday range data. First with the S&P 500.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nv ggplot2 3.3.5     v purrr   0.3.4\nv tibble  3.2.1     v dplyr   1.1.2\nv tidyr   1.2.0     v stringr 1.4.0\nv readr   2.1.2     v forcats 0.5.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(quantmod)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: xts\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: zoo\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'zoo'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n######################### Warning from 'xts' package ##########################\n#                                                                             #\n# The dplyr lag() function breaks how base R's lag() function is supposed to  #\n# work, which breaks lag(my_xts). Calls to lag(my_xts) that you type or       #\n# source() into this session won't work correctly.                            #\n#                                                                             #\n# Use stats::lag() to make sure you're not using dplyr::lag(), or you can add #\n# conflictRules('dplyr', exclude = 'lag') to your .Rprofile to stop           #\n# dplyr from breaking base R's lag() function.                                #\n#                                                                             #\n# Code in packages is not affected. It's protected by R's namespace mechanism #\n# Set `options(xts.warn_dplyr_breaks_lag = FALSE)` to suppress this warning.  #\n#                                                                             #\n###############################################################################\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'xts'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:dplyr':\n\n    first, last\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: TTR\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n```\n:::\n\n```{.r .cell-code}\nspyIn <- quantmod::getSymbols(\"SPY\", from = as.Date(\"2021/01/01\"), to = as.Date(\"2023/09/30\"), periodicity = \"daily\", src = \"yahoo\", auto.assign = FALSE)\nqqqIn <- quantmod::getSymbols(\"QQQ\", from = as.Date(\"2021/01/01\"), to = as.Date(\"2023/09/30\"), periodicity = \"daily\", src = \"yahoo\", auto.assign = FALSE)\niwmIn <- quantmod::getSymbols(\"IWM\", from = as.Date(\"2021/01/01\"), to = as.Date(\"2023/09/30\"), periodicity = \"daily\", src = \"yahoo\", auto.assign = FALSE)\n\n\nspyIn$spyRange <- (spyIn$SPY.High - spyIn$SPY.Low)/ spyIn$SPY.Open\nqqqIn$qqqRange <- (qqqIn$QQQ.High - qqqIn$QQQ.Low)/ qqqIn$QQQ.Open\niwmIn$iwmRange <- (iwmIn$IWM.High - iwmIn$IWM.Low)/ iwmIn$IWM.Open\n\n\n#decomposedSPY <- decompose(spyIn$spyRange)\n\n##decompedSPY = HoltWinters(spyIn$spyRange,beta = FALSE,gamma = FALSE)\n#plot(decompedSPY)\n\nautoplot(spyIn$spyRange)\n```\n\n::: {.cell-output-display}\n![](Exploratory-Data-Analysis_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nacf(spyIn$spyRange)\n```\n\n::: {.cell-output-display}\n![](Exploratory-Data-Analysis_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\npacf(spyIn$spyRange)\n```\n\n::: {.cell-output-display}\n![](Exploratory-Data-Analysis_files/figure-html/unnamed-chunk-1-3.png){width=672}\n:::\n:::\n\n\n\nUpon initial review of the SPY intraday range data, it appears that there is some trend, but no seasonality. The decomposition function would not work on the data as it could not recognize periodicity. As a next step, we can difference the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(forecast)\n\n\ndiff1 <- diff(spyIn$spyRange)\n\n\n\n#write.csv(diff1SPY, \"/data/spyDiff.csv\")\n#auto.arima(spyIn$spyRange)\nplot(diff1)\n```\n\n::: {.cell-output-display}\n![](Exploratory-Data-Analysis_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nAfter differencing, the data appears to have lost its trend. However, there is still visible heteroskedacticity in the differences between intraday ranges.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacf(diff1,    na.action = na.exclude)\n```\n\n::: {.cell-output-display}\n![](Exploratory-Data-Analysis_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\npacf(diff1,    na.action = na.exclude)\n```\n\n::: {.cell-output-display}\n![](Exploratory-Data-Analysis_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n:::\n\n\nAfter differencing, we see 2 lags being significant in the ACF plot. In the PACF plot, we see about 4 lags being significant. This is a marked departure from the original plots, where the ACF showed clear non-stationarity and the PACF had many significant lags.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tseries)\n\ndiffnoNA <- diff1$spyRange[!is.na(diff1$spyRange)]\nadf.test(diffnoNA)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in adf.test(diffnoNA): p-value smaller than printed p-value\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tAugmented Dickey-Fuller Test\n\ndata:  diffnoNA\nDickey-Fuller = -12.455, Lag order = 8, p-value = 0.01\nalternative hypothesis: stationary\n```\n:::\n:::\n\n\n\nWith dickey fuller test result of 0.01, we can reject the null hypothesis and conclude the series is stationary. \n\n\n\n<h3> Moving Average Smoothing </h3>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspyDiff1 <- as.ts(diffnoNA)\n\nspyAvg3Diff1 <- stats::filter(spyDiff1, sides = 1, rep(1/3, 3))\nspyAvg5Diff1 <- stats::filter(spyDiff1, sides = 1, rep(1/5, 5))\nspyAvg30Diff1 <- stats::filter(spyDiff1, sides = 1, rep(1/30, 30))\nspyAvg50Diff1 <- stats::filter(spyDiff1, sides = 1, rep(1/50, 50))\n\nspyAvg100Diff1 <- stats::filter(spyDiff1, sides = 1, rep(1/100, 100))\n\n\nautoplot(spyAvg3Diff1)\n```\n\n::: {.cell-output-display}\n![](Exploratory-Data-Analysis_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\nautoplot(spyAvg5Diff1)\n```\n\n::: {.cell-output-display}\n![](Exploratory-Data-Analysis_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n\n```{.r .cell-code}\nautoplot(spyAvg30Diff1)\n```\n\n::: {.cell-output-display}\n![](Exploratory-Data-Analysis_files/figure-html/unnamed-chunk-5-3.png){width=672}\n:::\n\n```{.r .cell-code}\nautoplot(spyAvg50Diff1)\n```\n\n::: {.cell-output-display}\n![](Exploratory-Data-Analysis_files/figure-html/unnamed-chunk-5-4.png){width=672}\n:::\n\n```{.r .cell-code}\nautoplot(spyAvg100Diff1)\n```\n\n::: {.cell-output-display}\n![](Exploratory-Data-Analysis_files/figure-html/unnamed-chunk-5-5.png){width=672}\n:::\n:::\n\n\n\nOverall the effect of the moving average at higher numbers is to reveal seasonality in the data. At lower smoothing levels (3 and 5 days), the time series looked almost unchanged, and still highly variant. Only at a 30 day average window did the seasonality start to appear, with clear periods in the data and a repeating pattern. Notably, even with a repeating pattern the data still showed obvious heteroskedasticity, with periods of increased varianced. The 50 and 100 day moving average windows began to obfuscate the periods, while keeping the heteroskedacticity, although they did have smaller variations and were nearer to 0 on average. In adition, the 50 and 100 days had discernable trends in the data.\n\n\n",
    "supporting": [
      "Exploratory-Data-Analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}